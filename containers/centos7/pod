#!/bin/sh
#
# pod management helper script
#
#
info() {
    echo "$*" >&2
}

error() {
    echo "ERROR: $*" >&2
}

usage() {
    echo "USAGE: pod create|start|stop|remove|restart|status|ps" >&2
}

_pod_exists() {
    podman pod exists "$POD_NAME"
}

_create() {
    # start pod and its containers
    if ! _pod_exists
    then
        info "Creating $POD_NAME pod ..."
        podman pod create -n "$POD_NAME" -p "$POD_PORT:80"
        echo "SERVICE_URL=http://localhost:$POD_PORT" > $DIR/volumes/options.conf
    fi

    $DIR/container database start \
      && $DIR/container database exec /bin/sh -c 'while ! pg_isready ; do sleep 1 ; done' \
      && $DIR/container database exec -i create_db < $DIR/volumes/secrets/oauth.conf \
      && $DIR/container database exec -i create_db < $DIR/volumes/secrets/swarm.conf \
      && $DIR/container oauth start \
      && $DIR/container swarm start \
      && $DIR/container ingress start
}

_remove() {
    # remove pod and its containers
    if _pod_exists
    then
        info "Removing $POD_NAME pod ..."
        podman pod rm --force "$POD_NAME"
    fi
}

_stop() {
    podman pod stop "$POD_NAME"
}

_start() {
    podman pod start "$POD_NAME"
}

_restart() {
    podman pod restart "$POD_NAME"
}

_status() {
    # get pod status
    podman pod ps --filter "name=^$POD_NAME$" "$@"
}

_ps() {
    # list pod containers
    podman ps --filter "pod=$POD_NAME" "$@"
}

# -----------------------------------------------------------------------------

DIR="$(cd "$(dirname $0)" ; pwd )"
. $DIR/common.sh

COMMAND="$1"
[ "$#" -ge 1 ] && shift

case "$COMMAND" in
    create) _create ;;
    remove) _remove ;;
    start) _start ;;
    stop) _stop ;;
    restart) _restart ;;
    status) _status "$@" ;;
    ps) _ps "$@" ;;
    *)
        if [ -z "$COMMAND" ]
        then
            error "Missing pod command!"
        else
            error "$COMMAND not found!"
        fi
        usage
        exit 1
        ;;
esac
