#!/bin/sh
#-------------------------------------------------------------------------------
#
# Purpose: Apache web server installation.
# Author(s): Martin Paces <martin.paces@eox.at>
#-------------------------------------------------------------------------------
# Copyright (C) 2015 EOX IT Services GmbH

. `dirname $0`/../lib_logging.sh
. `dirname $0`/../lib_apache.sh

info "Installing Apache HTTP server ... "

# the site configuration files
CONF_DEFAULT="/etc/httpd/conf.d/vires.conf"
CONF_DEFAULT_SSL="/etc/httpd/conf.d/vires_ssl.conf"

#======================================================================

# STEP 1:  INSTALL RPM PACKAGES
yum --assumeyes install httpd mod_wsgi mod_ssl crypto-utils

# STEP 2: FIREWALL SETUP (OPTIONAL)
# We enable access to port 80 and 443 from anywhere
# and make the firewal chages permanent.
if [ "$ENABLE_FIREWALL" = "YES" ]
then
    for SERVICE in http https
    do
        firewall-cmd --add-service=$SERVICE
        firewall-cmd --permanent --add-service=$SERVICE
    done
fi

# STEP 3: SETUP THE DEFAULT SITE
#NOTE 1: Current setup does not support multiple virtual hosts.

# setup default unsecured site
CONF=`locate_apache_conf 80`
if [ -z "$CONF" ]
then
    CONF="$CONF_DEFAULT"
    echo "Default virtual host not located creating own one in: $CONF"
    cat >"$CONF" <<END
# default site generated by the automatic VirES instance configuration script
<VirtualHost _default_:80>
</VirtualHost>
END
else
    echo "Default virtual host located in: $CONF"
fi

# setup default secured site
CONF=`locate_apache_conf 443`

# disable the default settings from the ssl.conf
if [ "$CONF" == "/etc/httpd/conf.d/ssl.conf" ]
then
    echo "Disabling the default SSL configuration in: $CONF"
    disable_virtual_host "$CONF"
    CONF=
fi

if [ -z "$CONF" ]
then
    if [ -n "$SSL_CACERTIFICATE_FILE" ]
    then
        SSL_CACERTIFICATE_FILE_LINE="SSLCACertificateFile $SSL_CACERTIFICATE_FILE"
    else
        SSL_CACERTIFICATE_FILE_LINE="#SSLCACertificateFile <cacertificate_file>"
    fi
    if [ -n "$SSL_CERTIFICATE_CHAINFILE" ]
    then
        SSL_CERTIFICATE_CHAINFILE_LINE="SSLCertificateChainFile $SSL_CERTIFICATE_CHAINFILE"
    else
        SSL_CERTIFICATE_CHAINFILE_LINE="#SSLCertificateChainFile <certificate_chain_file>"
    fi
    
    CONF="$CONF_DEFAULT_SSL"
    echo "Default secured virtual host not located creating own one in: $CONF"
    cat >"$CONF" <<END
# default site generated by the automatic VirES instance configuration script
<VirtualHost _default_:443>

    # common SSL settings
    ErrorLog logs/ssl_error_log
    TransferLog logs/ssl_access_log
    LogLevel warn
    SSLEngine on
    SSLProtocol all -SSLv2 -SSLv3
    SSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
    SSLHonorCipherOrder on
    SSLCertificateFile $SSL_CERTIFICATE_FILE
    SSLCertificateKeyFile $SSL_CERTIFICATE_KEYFILE
    $SSL_CACERTIFICATE_FILE_LINE
    $SSL_CERTIFICATE_CHAINFILE_LINE

</VirtualHost>
END
else
    echo "Default secured virtual host located in: $CONF"
fi

# STEP 4: START THE SERVICE

# enable start the httpd service
systemctl enable httpd.service
systemctl start httpd.service
systemctl status httpd.service
